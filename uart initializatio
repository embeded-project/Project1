#include "stdint.h"
#include "C:/Keil/EE319Kware/inc/tm4c123gh6pm.h"
#include "TM4C123GH6pm.h"



void RGBLED_Init(void){

}
void UART_Init(void) {
  SYSCTL_RCGCUART_R |= 0x01;  					// activate UART0
  SYSCTL_RCGCGPIO_R|= 0x01;             // activate port A
	UART7_CTL_R &= ~(0x01);					      // disable UART before configuration
	UART7_IBRD_R = 104; 						 // IBRD=int(160000000/(16*9600)) = 104.1667
  UART7_FBRD_R = 11;							// FBRD = int(0.1667 * 64 + 0.5)
  UART7_LCRH_R|= 0x70;                       // 8-bit word length, enable FIFO 001110000
	UART7_CTL_R |= 0x301;  					   // enable RXE, TXE and UART 001100000001
  GPIO_PORTA_AFSEL_R |= 0x03;              // enable alternative function PA0 ,PA1
  GPIO_PORTA_PCTL_R = (GPIO_PORTE_PCTL_R & (0xFFFFFF00) ) + 0x00000011;   //configure uart for PA0,PA1
  GPIO_PORTA_DEN_R |= 0x03;					// enable digital I/O on PA0, PA1
  GPIO_PORTA_AMSEL_R &= ~(0x03);			// disable analog function on PA0, PA1

}

char UART_InChar(void){
	while ((UART0_FR_R & 0x10)  !=0);        //wait if the reciever fifo is empty
	return (char) (UART0_DR_R & 0xFF);     //Return the first 8 bits(data)
	

}
void UART_outChar (char data) {
	while((UART0_FR_R & 0x0080) == 0) ; 			// wait if the transmit FIFO is not empty
   UART0_DR_R = data;


}
void get_command(char*command ,int len){

}
 
void RGB_setOutput (char data){

}
int main () {
	RGBLED_Init();
	
	
	
	
  UART_Init();
	
	char command [9] = {0};
	while(1){
	
	
	
	}
	
	
	
	
return 0;
}